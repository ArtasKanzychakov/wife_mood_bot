# app/scheduler.py

from apscheduler.schedulers.asyncio import AsyncIOScheduler
from telegram.ext import Application
from datetime import datetime
from telegram import InputMediaPhoto, InlineKeyboardMarkup, InlineKeyboardButton

from modules import (
    horoscopes, moon_cycles, jokes, psychology,
    esoterica, recipes, exercises, news,
    investment_news, investment_abc, audio_affirmations,
    fashion  # –¥–æ–±–∞–≤–ª–µ–Ω –º–æ–¥—É–ª—å –º–æ–¥—ã –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
)

# ID —á–∞—Ç–∞ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ bot.py
TARGET_CHAT_ID = None

def setup_scheduler(app: Application):
    scheduler = AsyncIOScheduler()

    # –£—Ç—Ä–µ–Ω–Ω–µ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ
    scheduler.add_job(lambda: send_morning(app), 'cron', hour=8)
    
    # –í–µ—á–µ—Ä–Ω—è—è –ø—Ä–∞–∫—Ç–∏–∫–∞
    scheduler.add_job(lambda: send_evening(app), 'cron', hour=20)

    # –ü–æ—á–∞—Å–æ–≤–æ–π –ø–∏–Ω–≥
    scheduler.add_job(lambda: send_hourly_content(app), 'cron', minute=0)

    scheduler.start()

def set_target_chat(chat_id: int):
    global TARGET_CHAT_ID
    TARGET_CHAT_ID = chat_id

# –ö–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
def get_reaction_keyboard():
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚ù§Ô∏è –ù—Ä–∞–≤–∏—Ç—Å—è", callback_data="like"),
            InlineKeyboardButton("üëé –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è", callback_data="dislike")
        ],
        [
            InlineKeyboardButton("üîÅ –ï—â—ë", callback_data="refresh"),
            InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back")
        ]
    ])

async def send_morning(app: Application):
    if not TARGET_CHAT_ID:
        return

    moon = await moon_cycles.get_today_moon_phase()
    affirmation_audio = await audio_affirmations.get_affirmation()
    recipe = await recipes.get_recipe()
    inspiration = await psychology.get_tip(short=True)

    greeting = f"""üåû –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!

üßò –ü—Ä–∞–∫—Ç–∏–∫–∞ –¥–Ω—è: {inspiration}
üåô {moon}
üçΩ –ë–ª—é–¥–æ –¥–Ω—è: {recipe.splitlines()[0]}

üéß –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è:
"""

    await app.bot.send_message(chat_id=TARGET_CHAT_ID, text=greeting)
    await app.bot.send_audio(chat_id=TARGET_CHAT_ID, audio=affirmation_audio)

    # –ö–∞—Ä—É—Å–µ–ª—å –º–æ–¥–Ω—ã—Ö —Ñ–æ—Ç–æ –∫–∞–∫ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ
    media = await fashion.get_fashion_images()
    if media:
        media_group = [InputMediaPhoto(m["media"], caption=m.get("caption", "")) for m in media]
        await app.bot.send_media_group(chat_id=TARGET_CHAT_ID, media=media_group)
        await app.bot.send_message(chat_id=TARGET_CHAT_ID, text="–ö–∞–∫ —Ç–µ–±–µ –º–æ–¥–Ω—ã–µ –æ–±—Ä–∞–∑—ã?", reply_markup=get_reaction_keyboard())

async def send_evening(app: Application):
    if not TARGET_CHAT_ID:
        return

    lfk = await exercises.get_evening_exercise()
    affirm_text = await audio_affirmations.get_evening_text()

    msg = f"""üåô –°–ø–æ–∫–æ–π–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞!

üèÉ‚Äç‚ôÄÔ∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –õ–§–ö: {lfk}
üéß –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è: {affirm_text}
"""

    await app.bot.send_message(chat_id=TARGET_CHAT_ID, text=msg)

async def send_hourly_content(app: Application):
    if not TARGET_CHAT_ID:
        return

    now = datetime.now().hour

    content_list = [
        await horoscopes.get_today_horoscope(),
        await jokes.get_joke(),
        await news.get_news(),
        await esoterica.get_tip(),
        await investment_news.get_news(),
        await investment_abc.get_tip(),
        await psychology.get_tip(short=True),
    ]

    index = now % len(content_list)
    content = content_list[index]

    await app.bot.send_message(chat_id=TARGET_CHAT_ID, text=content, reply_markup=get_reaction_keyboard())
