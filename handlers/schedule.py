from aiogram import types, Bot
from aiohttp import ClientSession
from config.settings import Config
from config.fallbacks import FALLBACK_CONTENT
import logging
from datetime import datetime

async def send_daily_content(bot: Bot):
    try:
        async with ClientSession() as session:
            # –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø
            horoscope = await get_horoscope(session)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = format_daily_message(horoscope)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            users = get_all_users()  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ë–î
            for user in users:
                try:
                    await bot.send_message(user.telegram_id, msg)
                except Exception as e:
                    logging.error(f"Error sending to user {user.telegram_id}: {e}")
    except Exception as e:
        logging.error(f"Daily content error: {e}")
        await send_fallback_content(bot)

async def get_horoscope(session):
    try:
        async with session.get(
            "https://horo.mail.ru/prediction/bli/",
            timeout=Config.REQUEST_TIMEOUT
        ) as resp:
            if resp.status == 200:
                return await parse_horoscope(await resp.text())
            return FALLBACK_CONTENT["horoscope"]
    except:
        return FALLBACK_CONTENT["horoscope"]

def format_daily_message(horoscope):
    current_date = datetime.now().strftime("%d.%m.%Y")
    return f"""
üìÖ {current_date}
{horoscope}

üåñ –õ—É–Ω–Ω—ã–π –¥–µ–Ω—å: 12-–π (–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)
‚ò∏Ô∏è –ë—É–¥–¥–∏–π—Å–∫–∏–π –¥–µ–Ω—å: –ú–µ–¥–∏—Ç–∞—Ü–∏—è
"""

async def send_fallback_content(bot: Bot):
    users = get_all_users()
    for user in users:
        try:
            await bot.send_message(
                user.telegram_id,
                FALLBACK_CONTENT["horoscope"]
            )
        except:
            continue

def register_handlers(dp: Dispatcher):
    pass  # –î–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤–Ω–µ—à–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
